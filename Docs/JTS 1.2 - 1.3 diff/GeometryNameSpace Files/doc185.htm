<body onunload=exit()><form method="POST">  <p align="center"><i><font size="3">Difference Analysis Generated by   <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> on  6/3/2003 11:47 AM</font></i>&nbsp;&nbsp;
  <input type="button" value="Navigate Changes" name="Navigate" onclick=pop_navigate()></p></form></body> <p align="left"><font size="4"><b>Base file: C:\Development\jts1.2\src\com\vividsolutions\jts\geom\MultiPoint.java</b></font></p> <p align="left"><font size="4"><b>Modified file: C:\Development\jts1.3\src\com\vividsolutions\jts\geom\MultiPoint.java</b></font></p><html>
<style type="text/css">
<!--
.HDNormal {  color: #000000;background:  #ffffff;text-decoration:none}
.HDDeleted {  color: #ff0000;background:  #ffffff;text-decoration:line-through}
.HDAdded {  color: #000000;background:  #ffff00;text-decoration:none}
-->
</style>
<body class="HDNormal">
<pre><a name="diff" id="c0"><span class="HDAdded">1:  
2:  
</span></a>1:  /*
2:   * <a name="diff" id="c1"><span class="HDDeleted"> </span></a>The <span class="HDDeleted">Java </span><span class="HDAdded">JTS </span>Topology Suite<span class="HDDeleted"> (JTS)</span> is a collection of Java classes that
3:   *  implement the fundamental operations required to validate a given
4:   *  geo-spatial data set to a known topological specification.
5:   *
6:   *  Copyright (C) 2001 Vivid Solutions
7:   *
8:   *  This library is free software; you can redistribute it and/or
9:   *  modify it under the terms of the GNU Lesser General Public
10:  *  License as published by the Free Software Foundation; either
11:  *  version 2.1 of the License, or (at your option) any later version.
12:  *
13:  *  This library is distributed in the hope that it will be useful,
14:  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
15:  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
16:  *  Lesser General Public License for more details.
17:  *
18:  *  You should have received a copy of the GNU Lesser General Public
19:  *  License along with this library; if not, write to the Free Software
20:  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
21:  *
22:  *  For more information, contact:
23:  *
24:  *  Vivid Solutions
25:  *  Suite #1A
26:  *  2328 Government Street
27:  *  Victoria BC  V8T 5G5
28:  *  Canada
29:  *
30:  *  (250)385-6040
31:  *  www.vividsolutions.com
32:  */
33: package com.vividsolutions.jts.geom;
34: 
<a name="diff" id="c2"><span class="HDDeleted">35: import java.util.Arrays;
</span></a>36: import com.vividsolutions.jts.geom.sfs.SFSMultiPoint;
37: import com.vividsolutions.jts.operation.IsSimpleOp;
38: 
<a name="diff" id="c3"><span class="HDDeleted">39: 
</span></a>40: /**
<a name="diff" id="c4"><span class="HDDeleted">41: </span></a><span class="HDDeleted"> *  Basic implementation of &lt;code&gt;MultiPoint&lt;/code&gt;.
</span><span class="HDAdded">42: </span><span class="HDAdded"> *  Models a collection of &lt;code&gt;Point&lt;/code&gt;s.
</span>43:  *
44:  *@version 1.<a name="diff" id="c5"><span class="HDDeleted">2</span></a><span class="HDAdded">3</span>
45:  */
46: public class MultiPoint
47:   extends GeometryCollection
48:   implements SFSMultiPoint
49: {
50: 
51:   /**
52:    *  Constructs a &lt;code&gt;MultiPoint&lt;/code&gt;.
53:    *
54:    *@param  points          the &lt;code&gt;Point&lt;/code&gt;s for this &lt;code&gt;MultiPoint&lt;/code&gt;
55:    *      , or &lt;code&gt;null&lt;/code&gt; or an empty array to create the empty geometry.
56:    *      Elements may be empty &lt;code&gt;Point&lt;/code&gt;s, but not &lt;code&gt;null&lt;/code&gt;s.
57:    *@param  precisionModel  the specification of the grid of allowable points
58:    *      for this &lt;code&gt;MultiPoint&lt;/code&gt;
59:    *@param  SRID            the ID of the Spatial Reference System used by this
60:    *      &lt;code&gt;MultiPoint&lt;/code&gt;
61:    */
62:   public MultiPoint(Point[] points, PrecisionModel precisionModel, int SRID) {
63:     super(points, precisionModel, SRID);
64:   }
65: 
66:   public int getDimension() {
67:     return 0;
68:   }
69: 
70:   public int getBoundaryDimension() {
71:     return Dimension.FALSE;
72:   }
73: 
74:   public String getGeometryType() {
75:     return "MultiPoint";
76:   }
77: 
78:   public Geometry getBoundary() {
79:     return new GeometryCollection(null, precisionModel, SRID);
80:   }
81: 
82:   public boolean isSimple() {
83:     return (new IsSimpleOp()).isSimple(this);
84:   }
85: 
86:   public boolean isValid() {
87:     return true;
88:   }
89: 
90:   public boolean equalsExact(Geometry other<a name="diff" id="c6"><span class="HDAdded">, double tolerance</span></a>) {
91:     if (!isEquivalentClass(other)) {
92:       return false;
93:     }
94:     return super.equalsExact(other<a name="diff" id="c7"><span class="HDAdded">, tolerance</span></a>);
95:   }
96: 
97:   /**
98:    *  Returns the &lt;code&gt;Coordinate&lt;/code&gt; at the given position.
99:    *
100:       *@param  n  the index of the &lt;code&gt;Coordinate&lt;/code&gt; to retrieve, beginning
101:       *      at 0
102:       *@return    the &lt;code&gt;n&lt;/code&gt;th &lt;code&gt;Coordinate&lt;/code&gt;
103:       */
104:      protected Coordinate getCoordinate(int n) {
105:        return ((Point) geometries[n]).getCoordinate();
106:      }
107:    
108:    }
109:    
</pre>
</body>
<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">
<!--
var newWind;
function putJumpCode(){
	var cnt = 8;
	newWind.document.write('<html>\n');
	newWind.document.write('<title>HtmlDiff Navigation</title>\n');
	newWind.document.write('<body>\n');
	newWind.document.write('<form name="jump">\n');
	newWind.document.write('<input type="button" value=" |&lt; " name="First" onclick=goto_first(this.form)>&nbsp;')
	newWind.document.write('<input type="button" value=" &lt; " name="Prev" onclick=goto_prev(this.form)>&nbsp;&nbsp;\n');
	newWind.document.write('<select name=url onchange=menu_goto(this.form)> \n');
	for (var i=0; i<cnt ;i++ ) {
		newWind.document.write('<option value="#C'+i+'">Change #'+(i+1)+ '</option> \n');
		}
	newWind.document.write('');
	newWind.document.write('</select>&nbsp;&nbsp;\n');
	newWind.document.write('<input type="button" value=" &gt; " name="Next"\n');
	newWind.document.write('onclick=goto_next(this.form)>\n');
	newWind.document.write('<input type="button" value=" &gt| " name="Last"\n');
	newWind.document.write('onclick=goto_last(this.form)>\n');
	newWind.document.write('</form>\n');
	newWind.document.write('');
	newWind.document.write('<form method="POST">\n');
	newWind.document.write('<p align="center"><i><font size="3">Generated\n');
	newWind.document.write('by <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> \n');
	newWind.document.write('</form>\n');
	newWind.document.write('</body>\n');
	newWind.document.write('</html>\n');
	newWind.document.write('<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">\n');
	newWind.document.write('<!--\n');
	newWind.document.write('');
	newWind.document.write('var directCloseFlag=1;\n');
	newWind.document.write('');
	newWind.document.write('function menu_goto( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('  var baseurl = opener.location.href ;\n');
	newWind.document.write('  var idx = baseurl.indexOf("#");\n');
	newWind.document.write('  if (idx > -1) {\n');
	newWind.document.write('	baseurl = baseurl.slice(0, idx);\n');
	newWind.document.write('  }');
	newWind.document.write('  selecteditem = menuform.url.selectedIndex ;\n');
	newWind.document.write('  newurl = menuform.url.options[ selecteditem ].value ;\n');
	newWind.document.write('  if (newurl.length != 0) {\n');
	newWind.document.write('    	opener.top.location.href = baseurl + newurl ;\n');
	newWind.document.write('  }');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_prev( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.selectedIndex>0) menuform.url.selectedIndex--;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_first( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = 0;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_last( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = menuform.url.options.length-1;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_next( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.options.length > (menuform.url.selectedIndex+1))\n');
	newWind.document.write('	menuform.url.selectedIndex++;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function restore()\n');
	newWind.document.write('{\n');
	newWind.document.write('    	focus();\n');
	newWind.document.write('	menu_goto(jump);\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('goto_first(jump)\n');
	newWind.document.write('//-->\n');
	newWind.document.write('<');
	newWind.document.write('/SCRIPT>\n');
}
function pop_navigate(){
  if ((newWind==null)||(newWind.closed)) {
    newWind =  window.open("" ,"HtmlDiffJumpWindow","width=270,height=40")
    if (newWind.opener == null) { // for Nav 2.0x
      newWind.opener = self // this creates and sets a new prop
    }	putJumpCode();
  
} 
else 
{	newWind.execScript("restore()", "JavaScript");
  }
}
function exit(){
  if (newWind != null) {   
	newWind.close();
  }
}
//--></SCRIPT></html>
