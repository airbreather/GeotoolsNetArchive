<body onunload=exit()><form method="POST">  <p align="center"><i><font size="3">Difference Analysis Generated by   <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> on  6/3/2003 11:47 AM</font></i>&nbsp;&nbsp;
  <input type="button" value="Navigate Changes" name="Navigate" onclick=pop_navigate()></p></form></body> <p align="left"><font size="4"><b>Base file: C:\Development\jts1.2\src\com\vividsolutions\jts\geom\MultiPolygon.java</b></font></p> <p align="left"><font size="4"><b>Modified file: C:\Development\jts1.3\src\com\vividsolutions\jts\geom\MultiPolygon.java</b></font></p><html>
<style type="text/css">
<!--
.HDNormal {  color: #000000;background:  #ffffff;text-decoration:none}
.HDDeleted {  color: #ff0000;background:  #ffffff;text-decoration:line-through}
.HDAdded {  color: #000000;background:  #ffff00;text-decoration:none}
-->
</style>
<body class="HDNormal">
<pre><a name="diff" id="c0"><span class="HDAdded">1:  
2:  
</span></a>1:  /*
2:   * <a name="diff" id="c1"><span class="HDDeleted"> </span></a>The <span class="HDDeleted">Java </span><span class="HDAdded">JTS </span>Topology Suite<span class="HDDeleted"> (JTS)</span> is a collection of Java classes that
3:   *  implement the fundamental operations required to validate a given
4:   *  geo-spatial data set to a known topological specification.
5:   *
6:   *  Copyright (C) 2001 Vivid Solutions
7:   *
8:   *  This library is free software; you can redistribute it and/or
9:   *  modify it under the terms of the GNU Lesser General Public
10:  *  License as published by the Free Software Foundation; either
11:  *  version 2.1 of the License, or (at your option) any later version.
12:  *
13:  *  This library is distributed in the hope that it will be useful,
14:  *  but WITHOUT ANY WARRANTY; without even the implied warranty of
15:  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
16:  *  Lesser General Public License for more details.
17:  *
18:  *  You should have received a copy of the GNU Lesser General Public
19:  *  License along with this library; if not, write to the Free Software
20:  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
21:  *
22:  *  For more information, contact:
23:  *
24:  *  Vivid Solutions
25:  *  Suite #1A
26:  *  2328 Government Street
27:  *  Victoria BC  V8T 5G5
28:  *  Canada
29:  *
30:  *  (250)385-6040
31:  *  www.vividsolutions.com
32:  */
33: package com.vividsolutions.jts.geom;
34: 
<a name="diff" id="c2"><span class="HDDeleted">35: import com.vividsolutions.jts.geom.sfs.SFSMultiPolygon;
36: 
37: import com.vividsolutions.jts.util.Assert;
</span></a>38: import java.util.ArrayList;
39: 
<a name="diff" id="c3"><span class="HDAdded">39: import com.vividsolutions.jts.geom.sfs.SFSMultiPolygon;
40: 
</span></a>40: /**
41:  *  Basic implementation of &lt;code&gt;MultiPolygon&lt;/code&gt;.
42:  *
43:  *@version 1.<a name="diff" id="c4"><span class="HDDeleted">2</span></a><span class="HDAdded">3</span>
44:  */
45: public class MultiPolygon extends GeometryCollection implements SFSMultiPolygon {
46: 
47:   /**
48:    *  Constructs a &lt;code&gt;MultiPolygon&lt;/code&gt;.
49:    *
50:    *@param  polygons        the &lt;code&gt;Polygon&lt;/code&gt;s for this &lt;code&gt;MultiPolygon&lt;/code&gt;
51:    *      , or &lt;code&gt;null&lt;/code&gt; or an empty array to create the empty geometry.
52:    *      Elements may be empty &lt;code&gt;Polygon&lt;/code&gt;s, but not &lt;code&gt;null&lt;/code&gt;
53:    *      s. The polygons must conform to the assertions specified in the &lt;A
54:    *      HREF="http://www.opengis.org/techno/specs.htm"&gt;OpenGIS Simple Features
55:    *      Specification for SQL&lt;/A&gt; .
56:    *@param  precisionModel  the specification of the grid of allowable points
57:    *      for this &lt;code&gt;MultiPolygon&lt;/code&gt;
58:    *@param  SRID            the ID of the Spatial Reference System used by this
59:    *      &lt;code&gt;MultiPolygon&lt;/code&gt;
60:    */
61:   public MultiPolygon(Polygon[] polygons, PrecisionModel precisionModel, int SRID) {
62:     super(polygons, precisionModel, SRID);
63:   }
64: 
65:   public int getDimension() {
66:     return 2;
67:   }
68: 
69:   public int getBoundaryDimension() {
70:     return 1;
71:   }
72: 
73:   public String getGeometryType() {
74:     return "MultiPolygon";
75:   }
76: 
77:   public boolean isSimple() {
78:     return true;
79:   }
80: 
81:   public Geometry getBoundary() {
82:     if (isEmpty()) {
83:       return new GeometryCollection(null, precisionModel, SRID);
84:     }
85:     ArrayList allRings = new ArrayList();
86:     for (int i = 0; i &lt; geometries.length; i++) {
87:       Polygon polygon = (Polygon) geometries[i];
88:       GeometryCollection rings = (GeometryCollection) polygon.getBoundary();
89:       for (int j = 0; j &lt; rings.getNumGeometries(); j++) {
90:         allRings.add(rings.getGeometryN(j));
91:       }
92:     }
93:     LineString[] allRingsArray = new LineString[allRings.size()];
94:     return new MultiLineString((LineString[]) allRings.toArray(allRingsArray),
95:         precisionModel, SRID);
96:   }
97: 
98:   public boolean equalsExact(Geometry other<a name="diff" id="c5"><span class="HDAdded">, double tolerance</span></a>) {
99:     if (!isEquivalentClass(other)) {
100:          return false;
101:        }
102:        return super.equalsExact(other<a name="diff" id="c6"><span class="HDAdded">, tolerance</span></a>);
103:      }
104:    }
105:    
106:    
</pre>
</body>
<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">
<!--
var newWind;
function putJumpCode(){
	var cnt = 7;
	newWind.document.write('<html>\n');
	newWind.document.write('<title>HtmlDiff Navigation</title>\n');
	newWind.document.write('<body>\n');
	newWind.document.write('<form name="jump">\n');
	newWind.document.write('<input type="button" value=" |&lt; " name="First" onclick=goto_first(this.form)>&nbsp;')
	newWind.document.write('<input type="button" value=" &lt; " name="Prev" onclick=goto_prev(this.form)>&nbsp;&nbsp;\n');
	newWind.document.write('<select name=url onchange=menu_goto(this.form)> \n');
	for (var i=0; i<cnt ;i++ ) {
		newWind.document.write('<option value="#C'+i+'">Change #'+(i+1)+ '</option> \n');
		}
	newWind.document.write('');
	newWind.document.write('</select>&nbsp;&nbsp;\n');
	newWind.document.write('<input type="button" value=" &gt; " name="Next"\n');
	newWind.document.write('onclick=goto_next(this.form)>\n');
	newWind.document.write('<input type="button" value=" &gt| " name="Last"\n');
	newWind.document.write('onclick=goto_last(this.form)>\n');
	newWind.document.write('</form>\n');
	newWind.document.write('');
	newWind.document.write('<form method="POST">\n');
	newWind.document.write('<p align="center"><i><font size="3">Generated\n');
	newWind.document.write('by <a href="http://www.ComponentSoftware.com/products/htmldiff" target="_blank">HtmlDiff</a> \n');
	newWind.document.write('</form>\n');
	newWind.document.write('</body>\n');
	newWind.document.write('</html>\n');
	newWind.document.write('<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">\n');
	newWind.document.write('<!--\n');
	newWind.document.write('');
	newWind.document.write('var directCloseFlag=1;\n');
	newWind.document.write('');
	newWind.document.write('function menu_goto( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('  var baseurl = opener.location.href ;\n');
	newWind.document.write('  var idx = baseurl.indexOf("#");\n');
	newWind.document.write('  if (idx > -1) {\n');
	newWind.document.write('	baseurl = baseurl.slice(0, idx);\n');
	newWind.document.write('  }');
	newWind.document.write('  selecteditem = menuform.url.selectedIndex ;\n');
	newWind.document.write('  newurl = menuform.url.options[ selecteditem ].value ;\n');
	newWind.document.write('  if (newurl.length != 0) {\n');
	newWind.document.write('    	opener.top.location.href = baseurl + newurl ;\n');
	newWind.document.write('  }');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_prev( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.selectedIndex>0) menuform.url.selectedIndex--;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_first( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = 0;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_last( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	menuform.url.selectedIndex = menuform.url.options.length-1;	\n');
	newWind.document.write('	menu_goto( menuform );\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function goto_next( menuform )\n');
	newWind.document.write('{\n');
	newWind.document.write('	if(menuform.url.options.length > (menuform.url.selectedIndex+1))\n');
	newWind.document.write('	menuform.url.selectedIndex++;\n');
	newWind.document.write('	menu_goto( menuform )\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('function restore()\n');
	newWind.document.write('{\n');
	newWind.document.write('    	focus();\n');
	newWind.document.write('	menu_goto(jump);\n');
	newWind.document.write('}');
	newWind.document.write('');
	newWind.document.write('goto_first(jump)\n');
	newWind.document.write('//-->\n');
	newWind.document.write('<');
	newWind.document.write('/SCRIPT>\n');
}
function pop_navigate(){
  if ((newWind==null)||(newWind.closed)) {
    newWind =  window.open("" ,"HtmlDiffJumpWindow","width=270,height=40")
    if (newWind.opener == null) { // for Nav 2.0x
      newWind.opener = self // this creates and sets a new prop
    }	putJumpCode();
  
} 
else 
{	newWind.execScript("restore()", "JavaScript");
  }
}
function exit(){
  if (newWind != null) {   
	newWind.close();
  }
}
//--></SCRIPT></html>
